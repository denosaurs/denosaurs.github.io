(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{77:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return d}));var a=n(2),o=n(6),r=(n(0),n(87)),i=n(92),c=n(93),s={title:"Usage"},l={unversionedId:"denon/usage",id:"denon/usage",isDocsHomePage:!1,title:"Usage",description:"Denon is designed to work as a drop-in replacement for the deno cli. It also supports configuration files if you want to create shorcuts for your most used commands or you want to fine tune the file watcher.",source:"@site/docs/denon/usage.md",permalink:"/docs/denon/usage",editUrl:"https://github.com/denosaurs/website/edit/master/docs/denon/usage.md",sidebar:"denon",previous:{title:"Installation",permalink:"/docs/denon/installation"},next:{title:"Templates",permalink:"/docs/denon/configuration/templates"}},u=[{value:"Working with the CLI",id:"working-with-the-cli",children:[]},{value:"Working with configuration files",id:"working-with-configuration-files",children:[]}],p={rightToc:u};function d(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Denon")," is designed to work as a ",Object(r.b)("strong",{parentName:"p"},"drop-in replacement")," for the deno cli. It also supports configuration files if you want to create shorcuts for your most used commands or you want to fine tune the file watcher."),Object(r.b)("h2",{id:"working-with-the-cli"},"Working with the CLI"),Object(r.b)("p",null,"Every command that you usually run with the deno cli works with denon out of the box:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"denon run app.ts\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"denon run --allow-net app.ts\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"denon run --allow-net app.ts --port=3000\n")),Object(r.b)("h2",{id:"working-with-configuration-files"},"Working with configuration files"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Denon")," also supports scripts inside configurations in your local directory, allowing you to declare script once and then run them just by calling their name."),Object(r.b)("p",null,"You can create a configuration as a JSON, YAML, or Typescript file:"),Object(r.b)(i.a,{groupId:"configuration-format",defaultValue:"json",values:[{label:"JSON",value:"json"},{label:"YML",value:"yaml"},{label:"Typescript",value:"typescript"}],mdxType:"Tabs"},Object(r.b)(c.a,{value:"json",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:'title="denon.json"',title:'"denon.json"'}),'{\n  "scripts": {\n    "start": "deno run app.ts",\n    "test": "deno test --allow-read"\n  }\n}\n'))),Object(r.b)(c.a,{value:"yaml",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yml",metastring:'title="denon.yml"',title:'"denon.yml"'}),'scripts:\n  start: "deno run app.ts"\n  test: "deno test --allow-read"\n'))),Object(r.b)(c.a,{value:"typescript",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:'title="denon.config.ts"',title:'"denon.config.ts"'}),'import { DenonConfig } from "https://deno.land/x/denon/mod.ts";\n\nconst config: DenonConfig = {\n  scripts: {\n    start: "deno run app.ts",\n    test: "deno test --allow-read",\n  },\n};\n\nexport default config;\n')))),Object(r.b)("p",null,"In the same directory as the configuration you can then run your application by simply typing:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"denon start\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"denon test\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Denon")," configuration is very powerful, you can learn how to tweak script options and file watcher parameters in the Advanced configuration"))}d.isMDXComponent=!0},92:function(e,t,n){"use strict";var a=n(0),o=n.n(a),r=n(95),i=n(85),c=n(51),s=n.n(c),l=37,u=39;t.a=function(e){var t=e.block,n=e.children,c=e.defaultValue,p=e.values,d=e.groupId,b=Object(r.a)(),m=b.tabGroupChoices,f=b.setTabGroupChoices,g=Object(a.useState)(c),h=g[0],j=g[1];if(null!=d){var O=m[d];null!=O&&O!==h&&p.some((function(e){return e.value===O}))&&j(O)}var w=function(e){j(e),null!=d&&f(d,e)},y=[];return o.a.createElement("div",null,o.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":t})},p.map((function(e){var t=e.value,n=e.label;return o.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":h===t,className:Object(i.a)("tabs__item",s.a.tabItem,{"tabs__item--active":h===t}),key:t,ref:function(e){return y.push(e)},onKeyDown:function(e){return function(e,t,n){switch(n.keyCode){case u:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case l:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(y,e.target,e)},onFocus:function(){return w(t)},onClick:function(){return w(t)}},n)}))),o.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(n).filter((function(e){return e.props.value===h}))[0]))}},93:function(e,t,n){"use strict";var a=n(0),o=n.n(a);t.a=function(e){return o.a.createElement("div",null,e.children)}}}]);