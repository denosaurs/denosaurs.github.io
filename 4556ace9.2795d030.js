(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{65:function(n,t,e){"use strict";e.r(t),e.d(t,"frontMatter",(function(){return a})),e.d(t,"metadata",(function(){return c})),e.d(t,"rightToc",(function(){return s})),e.d(t,"default",(function(){return d}));var o=e(2),i=e(6),r=(e(0),e(87)),a={title:"Watcher Options"},c={unversionedId:"denon/configuration/watcher",id:"denon/configuration/watcher",isDocsHomePage:!1,title:"Watcher Options",description:"File watcher options:",source:"@site/docs/denon/configuration/watcher.md",permalink:"/docs/denon/configuration/watcher",editUrl:"https://github.com/denosaurs/website/edit/master/docs/denon/configuration/watcher.md",sidebar:"denon",previous:{title:"Script Options",permalink:"/docs/denon/configuration/script"},next:{title:"Logger Options",permalink:"/docs/denon/configuration/logger"}},s=[],l={rightToc:s};function d(n){var t=n.components,e=Object(i.a)(n,["components"]);return Object(r.b)("wrapper",Object(o.a)({},l,e,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"File watcher options:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-json"}),'{\n  "scripts": {\n    /* */\n  },\n\n  "watcher": {\n    // The number of milliseconds after the last change.\n    "interval": 350,\n    // The file extensions that it will scan for.\n    "exts": ["js", "jsx", "ts", "tsx", "json"],\n    // The globs that it will scan for.\n    "match": ["*.*"],\n    // The globs that it will not scan for.\n    "skip": ["*/.git/*"],\n    // Use the legacy file monitoring algorithm. (walking)\n    "legacy": false\n  }\n}\n')))}d.isMDXComponent=!0}}]);